apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hyperledger-fabric.fullname" . }}-bootstrap
  labels:
    app.kubernetes.io/name: {{ include "hyperledger-fabric.chart" . }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app: {{ include "hyperledger-fabric.name" . }}
    chart: {{ include "hyperledger-fabric.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: bootstrap
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "hyperledger-fabric.name" . }}
      chart: {{ include "hyperledger-fabric.chart" . }}
      release: {{ .Release.Name }}
      heritage: {{ .Release.Service }}
      component: bootstrap
  template:
    metadata:
      labels:
        app: {{ include "hyperledger-fabric.name" . }}
        chart: {{ include "hyperledger-fabric.chart" . }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        component: bootstrap
    spec:
      volumes:
      - name: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
        persistentVolumeClaim:
          claimName: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
      - name: {{ include "hyperledger-fabric.fullname" . }}-crypto-config
        configMap:
          name:  {{ include "hyperledger-fabric.fullname" . }}-crypto-config
      - name: {{ include "hyperledger-fabric.fullname" . }}-configtx
        configMap:
          name: {{ include "hyperledger-fabric.fullname" . }}-configtx
      initContainers:
{{/* 
This Fabric script requires bash and uses curl too;
So switching to Alpine (smaller than Debian) and installing bash and curl
*/}}
      # - name: {{/*{{ .Chart.Name }}-*/}}get-binaries
      #   image: alpine
      #   imagePullPolicy: IfNotPresent
      #   command:
      #   - ash
      #   - -v
      #   - -x
      #   - -c
      #   - |
      #     echo Using Hyperledger Fabric bash installer to pull binaries

      #     # Install curl
      #     apk update && apk add --no-cache bash curl

      #     # Use /shared as working directory
      #     cd /shared

      #     # sed is used to overcome a bug in the script so as to not download Docker images
      #     curl \
      #     --silent \
      #     --show-error \
      #     --location \
      #     https://goo.gl/6wtTN5 | \
      #     sed \
      #     --expression="s|DOCKER=true|DOCKER=false|g" \
      #     --expression="s|SAMPLES=true|SAMPLES=false|g" | \
      #     bash -s ${FABRIC_BINARIES_VERSION}
          
      #     if [ -f /shared/bin/configtxgen ] && [ -f /shared/bin/cryptogen ]
      #     then
      #       echo "configtxgen & cryptogen added to /shared"
      #       touch /shared/binaries_downloaded
      #       exit 0;
      #     else
      #       echo "Either configtxgen or cryptogen is missing"
      #       exit 1;
      #     fi
      #     echo Done
      #   env:
      #   - name: FABRIC_BINARIES_VERSION
      #     value: {{ .Values.fabric.binaries }}
      #   volumeMounts:
      #   - mountPath: /shared
      #     name: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
      - name: {{/*{{ .Chart.Name }}-*/}}cryptogen
        image: gcr.io/dazwilkin-180709-fabric/cryptogen@sha256:ccbd9d94cb63d9e3228379eab379a70ed401b8dd89438c09f5bfd5f85eb9594f
        imagePullPolicy: IfNotPresent
        args:
        - generate
        - --config=/config/crypto-config.yaml
        - --output=/shared/crypto-config
        # image: alpine
        # imagePullPolicy: IfNotPresent
        # command:
        # - ash
        # - -c
        # - |
        #   echo Calling cryptogen

        #   while [ ! -f /shared/bin/cryptogen ]; do
        #     echo Awaiting cryptogen binary
        #     sleep 15s
        #   done
          
        #   # Copy binary out of /shared
        #   cp /shared/bin/cryptogen /tmp

        #   /tmp/cryptogen generate \
        #   --config=/config/crypto-config.yaml \
        #   --output=/shared/crypto-config

        #   echo Done
        volumeMounts:
        - mountPath: /shared
          name: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
        - mountPath: /config
          name: {{ include "hyperledger-fabric.fullname" . }}-crypto-config
      - name: {{/*{{ .Chart.Name }}-*/}}copy-config
        image: alpine
        imagePullPolicy: IfNotPresent
        args:
        - cp
        - /config/configtx.yaml
        - /shared
        volumeMounts:
        - mountPath: /shared
          name: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
        - mountPath: /config
          name: {{ include "hyperledger-fabric.fullname" . }}-configtx
      # - name: configtxgen-0
      #   image: bitnami/minideb:jessie
      #   imagePullPolicy: IfNotPresent
      #   command:
      #   - bash
      #   - -v
      #   - -x
      #   - -c
      #   - |
      #     echo Calling configtxgen

      #     while [ ! -f /shared/bin/configtxgen ]; do
      #       echo Awaiting configtxgen binary
      #       sleep 15s
      #     done

      #     /shared/bin/configtxgen -version

      #     # Create Orderer Genesis Block
      #     # FABRIC_CFG_PATH references location of configtxgen.yaml
      #     # TwoOrgsOrdererGenesis must match configtx.yaml profile
      #     echo Creating Orderer Genesis Block
      #     /shared/bin/configtxgen \
      #     -profile ${ORDERER_PROFILE} \
      #     -outputBlock /shared/${ARTIFACTS}/genesis.block #\
      #     #-channelID ${CHANNEL_ID}

      #     # Create Channel Configuration Transaction
      #     echo Creating Channel Configuration Transaction
      #     /shared/bin/configtxgen \
      #     -profile ${CHANNEL_PROFILE} \
      #     -outputCreateChannelTx /shared/${ARTIFACTS}/channel.tx \
      #     -channelID ${CHANNEL_ID}

      #     echo Done
      #   env:
      #   - name: ARTIFACTS
      #     value: "channel-artifacts"
      #   - name: FABRIC_CFG_PATH
      #     value: "/config"
      #   - name: CHANNEL_ID
      #     value: channel
      #   - name: CHANNEL_PROFILE
      #     value: TwoOrgsChannel
      #   - name: ORDERER_PROFILE
      #     value: TwoOrgsOrdererGenesis
      #   volumeMounts:
      #   - mountPath: /shared
      #     name: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
      #   - mountPath: /config
      #     name: {{ include "hyperledger-fabric.fullname" . }}-configtx
      - name: {{/*{{ .Chart.Name }}-*/}}configtxgen-1
        image: gcr.io/dazwilkin-180709-fabric/configtxgen@sha256:259d0e14adda457a94b5979800f19dc8170e702de1fc3a50424cb34d91dc7406
        imagePullPolicy: IfNotPresent
        #workingDir: /shared
        args: 
        - -profile
        - $(ORDERER_PROFILE)
        - -outputBlock
        - /shared/$(ARTIFACTS)/genesis.block
        # - -channelID
        # - $(CHANNEL_ID)
        env:
        - name: ARTIFACTS
          value: "." # Unable to create subdirectories "channel-artifacts"
        - name: FABRIC_CFG_PATH
          value: "/shared"
        # - name: CHANNEL_ID
        #   value: channel
        # - name: CHANNEL_PROFILE
        #   value: TwoOrgsChannel
        - name: ORDERER_PROFILE
          value: TwoOrgsOrdererGenesis
        volumeMounts:
        - mountPath: /shared
          name: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
        - mountPath: /config
          name: {{ include "hyperledger-fabric.fullname" . }}-configtx
      - name: {{/*{{ .Chart.Name }}-*/}}configtxgen-2
        image: gcr.io/dazwilkin-180709-fabric/configtxgen@sha256:259d0e14adda457a94b5979800f19dc8170e702de1fc3a50424cb34d91dc7406
        imagePullPolicy: IfNotPresent
        args:
        - -profile
        - $(CHANNEL_PROFILE)
        - -outputCreateChannelTx
        - /shared/$(ARTIFACTS)/channel.tx
        - -channelID
        - $(CHANNEL_ID)
        env:
        - name: ARTIFACTS
          value: "." # Unable to create subdirectories "channel-artifacts"
        - name: FABRIC_CFG_PATH
          value: "/shared"
        - name: CHANNEL_ID
          value: channel
        - name: CHANNEL_PROFILE
          value: TwoOrgsChannel
        # - name: ORDERER_PROFILE
        #   value: TwoOrgsOrdererGenesis
        volumeMounts:
        - mountPath: /shared
          name: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
        - mountPath: /config
          name: {{ include "hyperledger-fabric.fullname" . }}-configtx

{{- range $org := .Values.configtx.Organizations }}
      - name: anchor-{{ $org.ID | lower }}
        image: gcr.io/dazwilkin-180709-fabric/configtxgen@sha256:259d0e14adda457a94b5979800f19dc8170e702de1fc3a50424cb34d91dc7406
        imagePullPolicy: IfNotPresent
        args:
        - -profile
        - $(CHANNEL_PROFILE)
        - -outputAnchorPeersUpdate
        - /shared/$(ARTIFACTS)/$(ORG_ID).anchors.tx
        - -channelID
        - $(CHANNEL_ID)
        - -asOrg
        - $(ORG_ID)
        # image: alpine
        # imagePullPolicy: IfNotPresent
        # command:
        # - ash
        # - -c
        # - |
        #   echo Define Anchor Peer for ${ORG_ID}

        #   while [ ! -f /shared/bin/configtxgen ]; do
        #     echo Awaiting
        #     sleep 15s
        #   done
          
        #   # Copy binary out of /shared
        #   cp /shared/bin/configtxgen /tmp

        #   /tmp/configtxgen \
        #   -profile ${CHANNEL_PROFILE} \
        #   -outputAnchorPeersUpdate ./channel-artifacts/${ORG_ID}.anchors.tx \
        #   -channelID ${CHANNEL_ID} \
        #   -asOrg ${ORG_ID}

        #   echo Done
        env:
        - name: ARTIFACTS
          value: "." # Unable to create subdirectories "channel-artifacts"
        - name: FABRIC_CFG_PATH
          value: "/shared"
        - name: CHANNEL_ID
          value: channel
        - name: CHANNEL_PROFILE
          value: TwoOrgsChannel
        - name: ORG_ID
          value: {{ $org.ID }}
        volumeMounts:
        - mountPath: /shared
{{/* NB Within the range, need to use "$" instead of "." to scope the include correctly */}}  
          name: {{ include "hyperledger-fabric.fullname" $ }}-shared-pvc
{{- end }}
      containers:
      - name: {{/*{{ .Chart.Name }}-*/}}bootstrapped
        image: alpine
        imagePullPolicy: IfNotPresent
        command:
        - ash
        - -c
        - |
          touch /shared/bootstrapped
        volumeMounts:
        - mountPath: /shared
          name: {{ include "hyperledger-fabric.fullname" . }}-shared-pvc
